from wedding.models import (Language, Code, Guest, Group, IPLog,
                                   AccessLog, Message, Music, Vote,
                                   CodeAffinity, Affinity, Prezzie, Novedad)
from django.contrib import admin
from django import forms
from django.contrib.admin.widgets import FilteredSelectMultiple

try:
    from tinymce.widgets import TinyMCE
except ImportError:
    TinyMCE = None

class NovedadAdminForm(forms.ModelForm):
    if TinyMCE is not None:
        text = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 20},
                   mce_attrs={'theme': "advanced", 'relative_urls': False}))
    class Meta:
        model = Novedad

class NovedadAdmin(admin.ModelAdmin):
    list_display = ('title', 'date')
    form = NovedadAdminForm

class GuestAdminForm(forms.ModelForm):
    class Meta:
        model = Guest

    def clean_code(self):
        code = self.cleaned_data['code']
        if code is None:
            code = Code.newRandomCode()
        return code

class CodeAdmin(admin.ModelAdmin):
    fieldsets = [
        (None,   {'fields': ['code', 'language', 'invited_to_party', 'pays', 'how_much', 'has_extras']}),
        ('User', {'fields': ['user'], 'classes': ['collapse']}),
        ('Feedback', {'fields': ['sent_rsvp', 'keep_together'], 'classes': ['collapse']}),
    ]
    search_fields = ['code', 'guest__full_name', 'guest__nick']
    list_display = ('code', 'to', 'invited_to_party', 'sent_rsvp', 'keep_together', 'language', 'pays', 'how_much', 'has_extras')
    list_filter = ['invited_to_party', 'sent_rsvp', 'language', 'pays', 'has_extras']

class CodeGuest(admin.StackedInline):
    model = Guest

    fieldsets = [
        (None,   {'fields': ['code', 'invited_to_party', 'pays', 'how_much', 'has_extras']}),
    ]

class GuestAdmin(admin.ModelAdmin):
    fieldsets = [
        (None,   {'fields': ['full_name', 'nick', 'gender', 'people']}),
        ('Code', {'fields': ['code']}),
        ('RSVP', {'fields': ['is_coming'], 'classes': ['collapse']}),
        ('Menu', {'fields': ['is_vegetarian', 'other_notes'], 'classes': ['collapse']}),
    ]

    list_display = ('full_name', 'partners', 'is_coming', 'has_confirmed', 'invited_to_party', 'code')
    form = GuestAdminForm
    inlines = [CodeGuest]
    list_filter = ['is_coming', 'is_vegetarian', 'gender']
    search_fields = ['full_name', 'nick']

class MessageAdmin(admin.ModelAdmin):
    list_display = ('snippet', 'public', 'timestamp')
    list_filter = ['public']

class IPLogAdmin(admin.ModelAdmin):
    list_display = ('ip', 'attempts')

class GroupAdminForm(forms.ModelForm):
    guests = forms.ModelMultipleChoiceField(
                widget = FilteredSelectMultiple('Guests',False),
                queryset = Guest.objects.filter(is_coming=True))
    class Meta:
        model = Group


class GroupAdmin(admin.ModelAdmin):
    form = GroupAdminForm

admin.site.register(Language)
admin.site.register(Code, CodeAdmin)
admin.site.register(Guest, GuestAdmin)
admin.site.register(Group, GroupAdmin)
admin.site.register(IPLog, IPLogAdmin)
admin.site.register(AccessLog)
admin.site.register(Message, MessageAdmin)
admin.site.register(Music)
admin.site.register(Vote)
admin.site.register(CodeAffinity)
admin.site.register(Affinity)
admin.site.register(Prezzie)
admin.site.register(Novedad, NovedadAdmin)
